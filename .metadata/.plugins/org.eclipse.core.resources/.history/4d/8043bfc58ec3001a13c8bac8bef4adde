package DemoProject.RestAPIRestAssured;
import io.restassured.RestAssured;

import io.restassured.path.json.JsonPath;

import static io.restassured.RestAssured.*;

import static org.hamcrest.Matchers.*;

import org.testng.Assert;

import files.ReUsableMethod;

import files.payload;

public class basics {

	public static void main(String[] args) {

		// TODO Auto-generated method stub

		// Validate if Add Place API working fine

		// Given - ALl input details

		// When - Submit the API (Resource and HTTP method)

		// Then - Validate the response

		// Add place -> updated place -> with new address Get place -> if new place is

		// updated successfully

		RestAssured.baseURI = "https://rahulshettyacademy.com";

		String response = given().log().all().queryParam("key", "qaclick123").header("Content-Type", "application/json")

				.body(payload.AddPlace()).when().post("maps/api/place/add/json").then().assertThat().statusCode(200)

				.body("scope", equalTo("APP")).header("Server", "Apache/2.4.18 (Ubuntu)").extract().response()

				.asString();

		System.out.println(response);

		JsonPath js = new JsonPath(response); // for parsing Json

		String placeid = js.getString("place_id");

		System.out.println(placeid);

		String newAddress = "Magarpatta City";

		given().log().all().queryParam("key", "qaclick123").header("Content-Type", "application/json")

				.body("{\r\n" + "\"place_id\":\"" + placeid + "\",\r\n" + "\"address\":\"" + newAddress + "\",\r\n"

						+ "\"key\":\"qaclick123\"\r\n" + "}\r\n" + "")

				.when().put("maps/api/place/update/json").then().assertThat().log().all().statusCode(200)

				.body("msg", equalTo("Address successfully updated"));

		String getPlaceName = given().log().all().queryParam("key", "qaclick123").queryParam("place_id", placeid).when()

				.get("maps/api/place/get/json").then().assertThat().log().all().statusCode(200).extract().response()

				.asString();

		JsonPath js1 = ReUsableMethod.rawToJson(getPlaceName);

		String actualAddress = js1.getString("address");

		System.out.println(actualAddress);

		Assert.assertEquals(actualAddress, newAddress);

		// verification of actualAddress = newAddress using TestNG

		// Assert.assertEquals(actualAddress, newAddress);

	}

}