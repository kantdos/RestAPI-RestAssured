import static io.restassured.RestAssured.*;

import java.io.File;

import io.restassured.RestAssured;
import io.restassured.filter.session.SessionFilter;
import io.restassured.path.json.JsonPath;

public class JiraTest {
	public static void main(String[] args) {
	RestAssured.baseURI="http://localhost:8080";
	//get session id
	SessionFilter sessionid = new SessionFilter(); //session class
	String resp = given()
	.header("Content-Type","application/json")
	.body("{ \"username\": \"kant.dos\", \"password\": \"Asdf@123\" }").log().all()
	.filter(sessionid)
	.when()
	.post("/rest/auth/1/session")
	.then().log().all().assertThat().statusCode(200)
	.extract().response().asString();
	/*
	JsonPath js = ReUsableMethod.rawToJson(resp);
	String sessionid = js.getString("session.value");
	System.out.println(sessionid);
	*/
	//add comment
		String comment =
		given()
		.header("Content-Type","application/json").pathParam("id","10200").log().all()
		//.header("JSESSIONID","sessionid")
		.body("{\r\n" + 
				"    \"body\": \"Commnet from Automation\",\r\n" + 
				"    \"visibility\": {\r\n" + 
				"        \"type\": \"role\",\r\n" + 
				"        \"value\": \"Administrators\"\r\n" + 
				"    }\r\n" + 
				"}")
		.filter(sessionid)
		.when()
		.post("/rest/api/2/issue/{id}/comment/")
		.then().log().all().assertThat().statusCode(201)
		.extract().response().asString();
		System.out.println(comment);
		
		JsonPath js = new JsonPath(comment);
		String commentId  = js.getString("id");//get comment id
		
		//Add attachment
		given()
		.header("X-Atlassian-Token", "no-check")
		.filter(sessionid)
		.pathParam("id","10200").log().all()
		.header("Content-Type","multipart/form-data")
		.multiPart("file", new File("DataFile.txt"))
		.when()
		.post("/rest/api/2/issue/{id}/attachments")
		.then().log().all().assertThat().statusCode(200);
		
		//Get issue details
		
		String issueDetails = given()
		.filter(sessionid)
		.pathParam("id","10200")
		.queryParam("fields", "comment")
		.when().log().all()
		.get("/rest/api/2/issue/{id}")
		.then().log().all().extract().response().asString();
		System.out.println(issueDetails);
		
		JsonPath js1 = new JsonPath(issueDetails);
		int commentsCount = js1.getInt("fields.comment.comments.size()");
		for (int i =0; i<commentsCount;i++)
		{
			System.out.println(js1.getInt("fileds.comment.comments["+i+"].id"));
			
		}
		
	}

}
